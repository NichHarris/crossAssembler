Test -CodeGenerator Class-
true
true
Test isOverflow with a signed binary number
true
true
Test isOverflow with a unsigned binary number
false
false
Test getBinaryValue()
3
3
Test toBinary()
011
011
Test getTwosComplement()
101
101
Test -CodeGenerator Class-
true
true
Test -Comment Class- Default constructor and getter method


Test -Comment Class- Parameterized constructor and getter method
Hello World
Hello World
Test -Comment Class- Parameterized constructor and getter method
This Test Will Fail
Hello World
Test Default Constructor


Test Parameterized Constructor
directive cstring
directive cstring
Test Setter and getter
newCstring
newCstring
Test getCode
6e 65 77 43 73 74 72 69 6e 67 00
6e 65 77 43 73 74 72 69 6e 67 00
Test Parameterized Constructor with position object
Error: Line 1, Column 2: Error 1
Error: Line 1, Column 2: Error 1
Test Parameterized Constructor without position object
Error: Line 3, Column 4: Error 2
Error: Line 3, Column 4: Error 2
Testing report Error
testfile.asm: Error: Line 2, Column 3: Error 1
testfile.asm: Error: Line 2, Column 3: Error 1
Test -Instruction Class- Default Constructor


Test -Instruction Class- Mnemonic and Operand Constructor
addv.u3 3
addv.u3 3
Test -Instruction Class- setMnemonic
addv.u3
addv.u3
Test -Instruction Class- getOperand
3
3
Test -Instruction Class- toString
'"addv.u3: 152" 3'
'"addv.u3: 152" 3'
Test -Instruction Class- getSize
1
1
Test -InterRep Class- addLine with just a line statement object
'Fct '"addv.u3: 152" 3' '
'Fct '"addv.u3: 152" 3' '
Test -InterRep Class- getLine()
'Fct '"addv.u3: 152" 3' '
'Fct '"addv.u3: 152" 3' '
Test -InterRep Class- getLength()
1
1
Test -InterRep Class- empty LineStatement passed to InterRep object
' '": -1" ' '
' '": -1" ' '
Test -InterRep- setInstruction() and hasInstruction()
false
false
Test -InterRep- setAddr() and getAddr()
100
100
Test -LineStatement Class- Default Constructor
 '": -1" '
 '": -1" '
Test -LineStatement Class- Parameterized Constructor with label, instruction and comment
Fct '"addv.u3: 152" 3'
Fct '"addv.u3: 152" 3'
Test -LineStatement Class- setLabel()
RA
RA
Test -LineStatement Class- setInstruction() and getInstruction
'"mul: 152" 4'
'"mul: 152" 4'
Test -LineStatement Class- setComment()
; new comment
; new comment
Test -LineStatement Class- getLabel()
RA
RA
Test -Listing Class- getListing()
1    0000 null          Fct           addv.u3       3             ; this is a comment
1    0000 null          Fct           addv.u3       3             ; this is a comment
Test -Mnemonic Class- Default Constructor
 -1
 -1
Test -Mnemonic Class- Parametrized Constructor and getMnemonic
ADD 45
ADD 45
Test -Mnemonic Class- set Opcode and getOpCode
12
12
Test -Operand Class- Default Constructor and toString()


Test -Operand Class- Parametrized Constructor
45
45
Test -Operand Class- setOperand
12
12
Test -Operand Class- isNumeric
true
true
Test -Operand Class- isNumeric
false
false
Test -Options Class- Invalid Option
Error: Invalid Option
Error: Invalid Option
Test -Options Class- Too Many Options
Error: Too Many Options
Error: Too Many Options
Test -Options Class- No File
Error: No File
Error: No File
Test -Options Class- No Options
Error: No Options
Error: No Options
Test -Options Class- isVerbose()
true
true
Test -Options Class- isListing()
true
true
Test -Options Class- isListing()
true
true
Test -Options Class- isHelp()
true
true
Test -Options Class- isVerbose()
false
false
Test -Options Class- isHelp()
true
true
Test -Options Class- isBanner()
false
false
Test -Parser Class- getInterRep() number of lines
86
86
Test -Parser Class- getInterRep() inner contents
' '"enter.u5: 132" 4' ; OK, number <u5> [0..31].'
' '"enter.u5: 132" 4' ; OK, number <u5> [0..31].'
Test -Parser Class- getInterRep() Invalid Token
'thisIsAnInvalidToken '": -1" ' '
'thisIsAnInvalidToken '": -1" ' '
Test -Parser Class- getInterRep()  Adding Operand with Stack
Error: Line 82, Column 0: Instructions with inherent addressing mode do not have an operand field. [halt]
Error: Line 82, Column 0: Instructions with inherent addressing mode do not have an operand field. [halt]
Test -Parser Class- getInterRep() Forgetting Operand with Immediate value
Error: Line 43, Column 2: Instructions with immediate mode addressing needs to have an operand field. [ldc.i3]
Error: Line 43, Column 2: Instructions with immediate mode addressing needs to have an operand field. [ldc.i3]
Test -Parser Class- getInterRep() Operand Size Exceeds Bounds
Error: Line 32, Column 1: The immediate instruction 'enter.u5' must have a 5-bit unsigned operand number ranging from 0 to 31.
Error: Line 32, Column 1: The immediate instruction 'enter.u5' must have a 5-bit unsigned operand number ranging from 0 to 31.
Test -Parser Class- Successful Parsing of File - Immediate
' '": -1" ' ; TestImmediate.asm - Test immediate instructions.'
' '": -1" ' ; TestImmediate.asm - Test immediate instructions.'
Test -Parser Class- Successful Parsing of File - Immediate
' '"halt: 0" ' '
' '"halt: 0" ' '
Test -Parser Class- getInterRep() Operand cannot be a mnemonic
' '": -1" ' '
' '": -1" ' '
Test Position
p1[1,2]p2[2,4]p3[3,6]p4[65535,255]
p1[1,2]p2[2,4]p3[3,6]p4[65535,255]
Test getChar()
h
h
Test getLineNum()
123
123
Test scanFile()
; TestImmediate.asm - Test immediate instructions.
; TestImmediate.asm - Test immediate instructions.
Test getTokenType()
LabelOperand
LabelOperand
Test isNumeric()
true
true
Test getCurrPos()
50
50
Test Multiple Spaces or Tabs found
None
None
Test No Spaces in Front and End of Line
None
None
Test Empty Lines with and without spaces
None
None
Test Invalid Characters
None
None
Test Closing .cstring quotation marks "ABC
false
false
Test -SymbolTable Class- Invalid Key
-1
-1
Test -SymbolTable Class- Valid Key
0
0
Test -SymbolTable Class- getCode
1
1
Test Token
[halt(1,2)=Mnemonic][pop(2,4)=Mnemonic][dup(3,6)=Mnemonic]
[halt(1,2)=Mnemonic][pop(2,4)=Mnemonic][dup(3,6)=Mnemonic]
