Test -BinaryConverter Class- getOverflow()
false
false
Test -BinaryConverter Class- getBinaryValue(String s)
10
10
Test -BinaryConverter Class- toBinary()
01010
01010
Test -BinaryConverter Class- getTwosComplement(String b)
101
101
Test -CodeGenerator Class- File creation
0    0000 98            Fct           addv.u33
0    0000 98            Fct           addv.u33
Test -ErrorReporter Class- ErrorReporter()
Error: invalid character
Error: invalid character
Test -ErrorReporter Class- addError() from Scanner
Error: eof in string
Error: eof in string
Test -ErrorReporter Class- addError() from Scanner (invalid character)
Error: invalid character
Error: invalid character
Test -ErrorReporter Class- addError() from Parser
Error: Instructions with inherent mode addressing do not have an operand field.
Error: Instructions with inherent mode addressing do not have an operand field.
Test -ErrorReporter Class- reportErrors()
%
%
Test -ErrorReporter Class- isValid()
Error: Instructions with inherent mode addressing do not have an operand field.
Error: Instructions with inherent mode addressing do not have an operand field.
Test -Instruction Class- Default Constructor


Test -Instruction Class- Mnemonic and Operand Constructor
addv.u3 3
addv.u3 3
Test -Instruction Class- setMnemonic
not
not
Test -Instruction Class- setOperand
4
4
Test -Instruction Class- toString
'"not: 12" 4'
'"not: 12" 4'
Test -Instruction Class- getSize
1
1
Test -InterRep Class- addLine with just a line statement object
'Fct '"addv.u3: 152" 3' '
'Fct '"addv.u3: 152" 3' '
Test -InterRep Class- addLine with Line Statement components label, instruction and comment
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
Test -InterRep Class- getLine()
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
Test -InterRep Class- getLength()
1
1
Test -InterRep Class- empty LineStatement passed to InterRep object
' '": -1" ' '
' '": -1" ' '
Test -InterRep Class- Integration
'jmp '"addv.u3: 152" 3' ; This is a comment'
'jmp '"addv.u3: 152" 3' ; This is a comment'
Test -InterRep Class- setLabel()
ADD
ADD
Test -InterRep Class- setComment()
; this is a new comment from the setter
; this is a new comment from the setter
Test -InterRep- setInstruction() and hasInstruction()
true
true
Test -InterRep- setAddr() and getAddr()
100
100
Test -InterRep- updateCode()
ADD
ADD
Test -InterRep Class- toString()
Line 0: ' '": -1" ' '
Line 0: ' '": -1" ' '
Test -LineStatement Class- Default Constructor
 'null null'
 'null null'
Test -LineStatement Class- Parameterized Constructor with label, instruction and comment
Fct 'addv.u3 3'
Fct 'addv.u3 3'
Test -LineStatement Class- setLabel()
RA
RA
Test -LineStatement Class- setInstruction() and getInstruction
'mul 4'
'mul 4'
Test -LineStatement Class- setComment()
; new comment
; new comment
Test -LineStatement Class- getLabel()
RA
RA
Test -Listing Class- getListing()
1    0000 null          Fct           addv.u3       3             ; this is a comment
1    0000 null          Fct           addv.u3       3             ; this is a comment
Test -Mnemonic Class- Default Constructor
 -1
 -1
Test -Mnemonic Class- Parametrized Constructor
ADD 45
ADD 45
Test -Mnemonic Class- setMnemonic and getMnemonic
JMP
JMP
Test -Mnemonic Class- set Opcode and getOpCode
12
12
Test -Operand Class- Default Constructor and toString()


Test -Operand Class- Parametrized Constructor
45
45
Test -Operand Class- setOperand
12
12
Test -Operand Class- isNumeric
true
true
Test -Operand Class- isNumeric
false
false
Test -Options Class- Incorrect Options
Error: Invalid Option
Error: Invalid Option
Test -Options Class- Too Many Options
Error: Too Many Arguments in CL
Error: Too Many Arguments in CL
Test -Options Class- isVerbose()
true
true
Test -Options Class- isListing()
true
true
Test -Parser Class- getInterRep()
76
76
Test -Parser Class- isNumeric()
true
true
Test Position
p1[1,2]p2[2,4]p3[3,6]p4[65535,255]
p1[1,2]p2[2,4]p3[3,6]p4[65535,255]
Test -Reader Class- No File Given
java.lang.Exception: Error: Unable to open source file ''
java.lang.Exception: Error: Unable to open source file ''
Test -Reader Class- File does not exist
java.lang.Exception: Error: Unable to open source file ''
java.lang.Exception: Error: Unable to open source file ''
Test -Reader Class- Empty File
[]
[]
Test -Reader Class- Multiline File + All Addressing Modes
[Fct ldc.i3 3    ldc.i3 1    add     ; This is a comment]
[Fct ldc.i3 3    ldc.i3 1    add     ; This is a comment]
Test scanFile()
halt
halt
Test getTokenType()
LabelOperand
LabelOperand
Test isNumeric()
true
true
Test getCurrPos()
5
5
Test setCurrPos()
6
6
Test -SymbolTable Class- Invalid Key
-1
-1
Test -SymbolTable Class- Valid Key
0
0
Test -SymbolTable Class- getCode
1
1
Test Token
[halt(1,2)=Mnemonic][pop(2,4)=Mnemonic][dup(3,6)=Mnemonic]
[halt(1,2)=Mnemonic][pop(2,4)=Mnemonic][dup(3,6)=Mnemonic]
