Test isOverflow with a signed binary number
true
true
Test isOverflow with a unsigned binary number
false
false
Test getBinaryValue()
3
3
Test toBinary()
011
011
Test getTwosComplement()
101
101
Test -CodeGenerator Class- File creation
1    0000 98            Fct           addv.u3       3
1    0000 98            Fct           addv.u3       3
Test -Comment Class- Default constructor and getter method


Test -Comment Class- Parameterized constructor and getter method
comment
comment
Test -Comment Class- setter and getter method
New Comment
New Comment
Test Default Constructor


Test Parameterized Constructor
directive cstring
directive cstring
Test Setter and getter
newCstring
newCstring
Test getCode
6e 65 77 43 73 74 72 69 6e 67 00
6e 65 77 43 73 74 72 69 6e 67 00
Test Parameterized Constructor with position object
Error: Line 1, Column 2: Error 1
Error: Line 1, Column 2: Error 1
Test Parameterized Constructor without position object
Error: Line 3, Column 4: Error 2
Error: Line 3, Column 4: Error 2
Testing report Error
testfile.asm: Error: Line 2, Column 3: Error 1
testfile.asm: Error: Line 2, Column 3: Error 1
Test -Instruction Class- Default Constructor


Test -Instruction Class- Mnemonic and Operand Constructor
addv.u3 3
addv.u3 3
Test -Instruction Class- setMnemonic
not
not
Test -Instruction Class- setOperand
4
4
Test -Instruction Class- toString
'"not: 12" 4'
'"not: 12" 4'
Test -Instruction Class- getSize
1
1
Test -InterRep Class- addLine with just a line statement object
'Fct '"addv.u3: 152" 3' '
'Fct '"addv.u3: 152" 3' '
Test -InterRep Class- addLine with Line Statement components label, instruction and comment
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
Test -InterRep Class- getLine()
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
'jmp '"addv.u3: 152" 3' ; Test Comment 2'
Test -InterRep Class- getLength()
1
1
Test -InterRep Class- empty LineStatement passed to InterRep object
' '": -1" ' '
' '": -1" ' '
Test -InterRep Class- Integration
'jmp '"addv.u3: 152" 3' ; This is a comment'
'jmp '"addv.u3: 152" 3' ; This is a comment'
Test -InterRep Class- setLabel()
ADD
ADD
Test -InterRep Class- setComment()
; this is a new comment from the setter
; this is a new comment from the setter
Test -InterRep- setInstruction() and hasInstruction()
true
true
Test -InterRep- setAddr() and getAddr()
100
100
Test -InterRep- updateCode()
ADD
ADD
Test -InterRep Class- toString()
Line 0: ' '": -1" ' '
Line 0: ' '": -1" ' '
Test -LineStatement Class- Default Constructor
 '": -1" '
 '": -1" '
Test -LineStatement Class- Parameterized Constructor with label, instruction and comment
Fct '"addv.u3: 152" 3'
Fct '"addv.u3: 152" 3'
Test -LineStatement Class- setLabel()
RA
RA
Test -LineStatement Class- setInstruction() and getInstruction
'"mul: 152" 4'
'"mul: 152" 4'
Test -LineStatement Class- setComment()
; new comment
; new comment
Test -LineStatement Class- getLabel()
RA
RA
Test -Listing Class- getListing()
1    0000 null          Fct           addv.u3       3             ; this is a comment
1    0000 null          Fct           addv.u3       3             ; this is a comment
Test -Mnemonic Class- Default Constructor
 -1
 -1
Test -Mnemonic Class- Parametrized Constructor
ADD 45
ADD 45
Test -Mnemonic Class- setMnemonic and getMnemonic
JMP
JMP
Test -Mnemonic Class- set Opcode and getOpCode
12
12
Test -Operand Class- Default Constructor and toString()


Test -Operand Class- Parametrized Constructor
45
45
Test -Operand Class- setOperand
12
12
Test -Operand Class- isNumeric
true
true
Test -Operand Class- isNumeric
false
false
Test -Options Class- Incorrect Options
Error: Invalid Option
Error: Invalid Option
Test -Options Class- Too Many Options
Error: Too Many Arguments in CL
Error: Too Many Arguments in CL
Test -Options Class- isVerbose()
true
true
Test -Options Class- isListing()
true
true
Test -Parser Class- getInterRep() number of lines
76
76
Test -Parser Class- getInterRep() inner contents
' '"enter.u5: 112" 0' ; OK, number <u5> [0..31].'
' '"enter.u5: 112" 0' ; OK, number <u5> [0..31].'
Test Position
p1[1,2]p2[2,4]p3[3,6]p4[65535,255]
p1[1,2]p2[2,4]p3[3,6]p4[65535,255]
Test getChar()
h
h
Test getLineNum()
25
25
Test scanFile()
; TestImmediate.asm - Test immediate instructions.
; TestImmediate.asm - Test immediate instructions.
Test getTokenType()
LabelOperand
LabelOperand
Test isNumeric()
true
true
Test getCurrPos()
50
50
Test setCurrPos()
6
6
Test -SymbolTable Class- Invalid Key
-1
-1
Test -SymbolTable Class- Valid Key
0
0
Test -SymbolTable Class- getCode
1
1
Test Token
[halt(1,2)=Mnemonic][pop(2,4)=Mnemonic][dup(3,6)=Mnemonic]
[halt(1,2)=Mnemonic][pop(2,4)=Mnemonic][dup(3,6)=Mnemonic]
